<apex:page controller="SSign.SSCreateRequestController" action="{!init}" showHeader="false" sidebar="false" standardStylesheets="false" applyHtmlTag="false" applyBodyTag="false">
  <html>
    <!-- START: Code shared by SSCreateRequest[1|2|3|4].page -->
    <head>
      <c:SSCreateRequestHead wizardStepNumber="1" />
    </head>
    <body>
      <div class="loading-div background-white">
        <div class="loading-div-content">
          <img width="80" id="loading-div-spinner" src="{!URLFOR($Resource.SSign_Images,'lightning_spinner.gif')}" class="undraggable" unselectable="on" />
        </div>
      </div>
      <c:SSCreateRequestWizard wizardStepNumber="1" />
      <!-- END: Code shared by SSCreateRequest[1|2|3|4].page -->

      <script type="text/javascript">
        HeadUtils.Init.documentReadyFunction = function() {
          HeadUtils.ClickableTab.runClickableTabFinish = function(clickedTab) { 
            toggleDragDocumentHereText(clickedTab)
          };
          HeadUtils.ClickableTab.initClickableTab();

          j$('#drag-document-here-text').hide();

          setFileOnchange();

          populateSFDocumentsContainer();
          setDraggable();
        };

        var debugMode = true;

        function toggleDragDocumentHereText(clickedTab) {
          if (clickedTab.id === 'select-from-salesforce-tab') {
            j$('#drag-document-here-text').show();
          } else {
            j$('#drag-document-here-text').hide();
          }
        }

        function populateSFDocumentsContainer() {
          var rowSize = 4;
          $row = j$('<div class="row">');
          for (var i = 0; i < HeadUtils.Database.options.documents.length; i++) {
            var documentData = HeadUtils.Database.options.documents[i];
            var $col = j$('<div class="col-xl-3 col-lg-4 col-sm-6 col-12 sf-document-col pt-5">');
            var $sfDocument = HeadUtils.DataUtils.getHTMLFromDataStruct('#sf-document--prototype', documentData);
            $sfDocument.find('.label--title').text(documentData.title);
            if (documentData.numProfiles == null || documentData.numProfiles == 0) {
              $sfDocument.find('.label--num-profiles').remove();
              $sfDocument.find('.profile-icon').remove();
            } else {
              $sfDocument.find('.label--num-profiles').text(documentData.numProfiles);
            }
            $col.append($sfDocument);
            $row.append($col);
          }
          $row.appendTo('#sf-documents-container');
        }

        var numFilesToUpload;
        var numFilesUploaded;
        function setFileOnchange() {
          j$('#file-upload').on("change", function(event) {
            HeadUtils.showLoadingDiv();
            numFilesToUpload = this.files.length;
            numFilesUploaded = 0;
            for (var i = 0; i < this.files.length; i++) {
              setFileOnchangeLoop(this.files[i]);
            }
          });
        }

        function setFileOnchangeLoop(file) {
          const reader = new FileReader();
          reader.onload = function() {
            const fileBodyBase64 = reader.result
              .replace("data:", "")
              .replace(/^.+,/, "");
            insertFile(file.name, fileBodyBase64);
          };
          reader.readAsDataURL(file);
        }

        function insertFile(fileName, fileBodyBase64) {
          Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.SSCreateRequestController.insertFile}',
            HeadUtils.Database.stateId,
            fileName,
            fileBodyBase64,
            function(result, event) {
              if(!!result && event.status) {
                insertFileOncomplete(fileName, result);
              } else {
                alert('Error in uploading file: ' + event.message);
              } 
              //Sfdc.canvas.publisher.publish({name:"publisher.close",payload:{refresh:"true"}});
            },{escape: false}
          );
        }

        function insertFileOncomplete(fileName, fileId) {
          var documentData = {};
          documentData.title = fileName;
          documentData.numProfiles = 0;
          documentData.databaseId = fileId;
          documentData.isUserUpload = true;
          documentData.pages = [];
          HeadUtils.DocsToBeSent.addDocument(documentData);
          numFilesUploaded++;
          if (numFilesUploaded === numFilesToUpload) {
            j$('#file-upload')[0].value = ''; // Reset file input to allow for re-upload of the same doc
            var saveStateOncomplete = function() { HeadUtils.hideLoadingDiv(); }
            HeadUtils.Database.saveState(saveStateOncomplete);
          }
        }

        function setDraggable() {
          j$(".sf-document").draggable({
            appendTo: "body",
            cursor: "move",
            connectToSortable: "",
            helper: 'clone',
            revert: "invalid"
          });

          j$("#drag-document-here-container").droppable({
            tolerance: "intersect",
            accept: ".sf-document",
            activeClass: "ui-state-default",
            hoverClass: "ui-state-hover",
            drop: function(event, ui) {
              var $sfDocument = j$(ui.draggable);
              var documentData = HeadUtils.DataUtils.getDataStructFromHTML($sfDocument);
              HeadUtils.DocsToBeSent.addDocument(documentData);
            }
          });
        }
      </script>

      <!-- START: Page 1 main contents container -->
      <div class="container-fluid w-75 mt-5">
        <div class="row">

          <!-- Empty spacing column -->
          <div class="col-xl-1 col-12"></div>

          <!-- START: "Select documents to send" box -->
          <div class="col-xl-6 col-12 mr-2">
            <div class="row pt-2 pb-3">
              <div class="col pl-0">
                <style type="text/css">
                  @media screen and (max-width: 601px) {
                    .select-documents-text {
                      font-size: 1.25em;
                      text-align: center;
                    }
                  }
                </style>
                <h1 class="select-documents-text font-weight-bolder">Select documents to send</h1>
              </div>
            </div>

            <!-- START: Tabs ("Upload from Computer" and "Select from Salesforce") -->
            <div class="row white-block text-center">
              <div id="upload-from-computer-tab" class="col-xl-4 col-6 py-3 clickable-tab clickable-tab-active" renders="#upload-from-computer-tab-content">
                <h3 class="font-weight-bolder">Upload From Computer</h3>
              </div>
              <div id="select-from-salesforce-tab" class="col-xl-4 col-6 py-3 clickable-tab" renders="#select-from-salesforce-tab-content">
                <h3 class="font-weight-bolder">Select from Salesforce</h3>
              </div>
              <div class="col-xl-4 col-12">
                <!-- Empty spacing column -->
              </div>
            </div>
            <!-- END: Tabs ("Upload from Computer" and "Select from Salesforce") -->

            
            <!-- START: Tab content container (holds all tab content blocks) -->
            <div class="row">
              <div class="col-12 p-0">
                <!-- START: Tab content: "Upload from Computer" -->
                <div id="upload-from-computer-tab-content" class="container-fluid w-100 white-block border-top-0 py-3 text-center">
                  <div class="row" style="padding-top: 10em;">
                    <div class="col px-auto">
                      Drag and drop documents from your computer here
                    </div>
                  </div>
                  <div class="row mt-3" style="padding-bottom: 10em;">
                    <div class="col px-auto">
                      <style>
                        input[type="file"] {
                          display: none;
                        }
                        .custom-file-upload {
                          display: inline-block;
                          cursor: pointer;
                        }
                      </style>
                      <label for="file-upload" class="custom-file-upload btn btn-primary px-xl-5 py-2">
                        Browse your computer
                      </label>
                      <input id="file-upload" type="file" accept=".pdf" multiple="multiple" />
                    </div>
                  </div>
                </div>
                <!-- END: Tab content: "Upload from Computer" -->
                <!-- START: Tab content: "Select From Salesforce" -->
                <div id="select-from-salesforce-tab-content" class="container-fluid w-100 white-block border-top-0 py-3">
                  <div class="row" style="min-height: 30em;">
                    <div id="sf-documents-container" class="col">

                    </div>
                  </div>
                </div>
                <!-- END: Tab content: "Select From Salesforce" -->
              </div>
            </div>
          </div>
          <!-- END: "Select documents to send" box -->

          <!-- Empty spacing column -->
          <div class="col-12 d-xl-none d-flex p-4"></div>

          <!-- START: "Documents to be sent" box-->
          <div id="documents-to-be-sent-box-container" class="col-xl-4 col-12 ml-2" />
          <!-- END: "Documents to be sent" box-->

          <!-- START: Prototype item for "Select Documents to Send" box -->
          <div id="sf-document--prototype" listName="HeadUtils.Database.options.documents">

            <!-- Hidden for Alpha Release -->
            <!--
            <div class="sf-document-row center-parent" style="height: 1.5em;">
              <div class="center-y">
                <img class="profile-icon profile-icon-md" src="{!URLFOR($Resource.SSign_Images,'icons/person.png')}" />
                <span class="label--num-profiles">0</span>
              </div>
            </div>
            -->

            <div class="sf-document-row">
              <img class="sf-document-img sfdi-lg" src="{!URLFOR($Resource.SSign_Images,'icons/document.png')}" unselectable="on" />
            </div>
            <div class="sf-document-row">
              <div class="label--title">Sample title</div>
            </div>
          </div>
          <!-- END: Prototype item for "Select Documents to Send" box -->

          <!-- Empty spacing column -->
          <div class="col-xl-1 col-12"></div>

        </div>
      </div>
      <!-- END: Page 1 main contents container -->
    </body>
  </html>
</apex:page>