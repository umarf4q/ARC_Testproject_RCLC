<apex:page controller="scss.SocialLookupCtr" standardStylesheets="false" showHeader="false">

 	<style>
		body {
			font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
			color:#494b4e;
			line-height: 1.4;
			margin: 0;
		}

		p {
			font-size:12px;
		}

		h2 {
			font-size: 14px;
			color:#494b4e;
			margin-left:10px;
			min-width: 360px;
		}

		h3 {
			font-weight: normal;
		}

		ul, li {
			margin:0;
			padding:0;
			list-style: none;
		}

		.sidebar {
			height:100%;
			margin:0;
			padding:0;
			background: #fff;
			float:left;
		}

		.personaId {
			background: #f9f9f9;
			width:94%;
		   /* white-space: nowrap; */
			white-space: normal;
			padding:3%;
		}

		.avatar {
			width:60px;
			height: 60px;
			position: absolute;
			display: inline-block;
		}

		.avatar .socialLabelTwitter {
			width:18px;
			height:18px;
			background: #ffffff url('{!URLFOR($Resource.scss__SCS_SocialLookUp, 'imgs/twitter-icon.png')}') no-repeat center center;
			border-radius: 50%;
			position: absolute;
			bottom:0px;
			right:0px;
		}

		.avatar .socialLabelFacebook {
			width:18px;
			height:18px;
			background: #ffffff url('{!URLFOR($Resource.scss__SCS_SocialLookUp, 'imgs/facebook-icon.png')}') no-repeat center center;
			border-radius: 50%;
			position: absolute;
			bottom:0px;
			right:0px;
		}

		.avatar img {
			border-radius: 50%;
			height: 62px;
			width: 62px;
		}


		.personaInfo {
			display: inline-block;
			vertical-align: top;
			margin-left:80px;

		}

		.personaInfo h3 {
			margin:0;
		}

		.personaInfo .twitterHandle {
			color: #015ba7;
			text-decoration: none;
			font-size: 12px;
			vertical-align: top;
			margin: 0 0 10px 0;
		}

		.personaInfo ul {
			margin: 0;
			width:100%;
		}

		.personaInfo ul li {
			font-size: 12px;
			display: inline-block;
			margin-right:10px;
		}

		.personaInfo ul li span{
			font-weight: bold;
		}

		#componentSwitch {
			padding:5px 0 0px 0;
			border-bottom: 1px solid #ddd;
			min-width: 360px;
		}

		#componentSwitch ul {
			height:28px;
		}

		#componentSwitch li{
			float:left;
			font-size: 12px;
			color:#494b4e;
			width:33%;
			padding:2px 0 8px 0;
			text-align: center;

		}

		#componentSwitch li.active {

			border-bottom: 2px solid #00a8ff;
		}

		#componentSwitch li.active:hover {
		 border-bottom: 2px solid #00a8ff;
		}

		#componentSwitch li:hover {
			border-bottom: 2px solid #cfd0d2;
			cursor: pointer;
		}

		.conversations {
			min-width: 360px;
		}

		ul.conversations {
			border-bottom: 0;
		}

		ul.conversations .postContent {
			margin-left: 15px;
			padding-left: 24px;
		}

		li ul{
			margin-top: 1%;
		}

		ul.conversations li:first{
			border-top:none !important;
		}

		.postWrapper {
			border-top: 1px solid #ededed;
			padding: 1% 0% 1% 2%;
			/*padding:1% 5% 1% 6%;
			width:90%;*/
		}

		.postWrapper img {
			position: absolute;
			width:30px;
			height:30px;
			border-radius: 50%;
		}

		.postContent {
			margin-left:40px;
		}

		.postContent p {
			margin-top:5px;
			margin-bottom: 7px;
		}

		.postInfo {
			font-size: 12px;
			color:#7d7d84;
		}

		.postInfo span.bullet {
			margin:0 5px;
			color:#ddd;
		}

		.postInfo span.caseInfo {
			white-space: nowrap;
		}

		.postInfo img {
			width: 10px;
			height: 10px;
			position: relative;
			border-radius: 0;
		}

		.iconMargin {
			margin-top: -3px;
		}

		.hide {
			display: none;
		}

		.show {
			display:block;
		}

		.loadMoreBtn{
		  cursor: pointer;
		  text-align: center;
		  text-transform: lowercase;
		  border: 1px solid #ededed;
		  padding: 2% 5% 2% 5%;
		  width: 90%;
		}

		.plusIcon{
		  cursor: pointer;
		}
	</style>


 	<div class="sidebar">
		<div>

			<div class="personaId">

				<apex:outputPanel rendered="{!persona.Provider == 'Twitter'}" styleClass="avatar" layout="block">
					<img src="{!persona.ExternalPictureURL}" onError="this.src = '{!URLFOR($Resource.SCS_SocialLookUp, 'imgs/MissingAvatar.png')}'" />
					<div class="socialLabelTwitter"></div>
				</apex:outputPanel>

				<apex:outputPanel rendered="{!persona.Provider == 'Twitter'}" styleClass="personaInfo" layout="block">
					<h3>{!persona.RealName}</h3>
					<a href="{!persona.ProfileUrl}" class="twitterHandle" target="_blank" >@{!persona.Name}</a>
					<ul>
						<li><apex:outputField value="{!persona.Followers}" rendered="{!$ObjectType.SocialPersona.fields.Followers.Accessible}" /> Followers</li>
						<li><apex:outputField value="{!persona.Following}" rendered="{!$ObjectType.SocialPersona.fields.Following.Accessible}" /> Following</li>
						<li><apex:outputField value="{!persona.NumberOfTweets}" rendered="{!$ObjectType.SocialPersona.fields.NumberOfTweets.Accessible}" /> Tweets</li>
					</ul>
				</apex:outputPanel>

				<apex:outputPanel rendered="{!persona.Provider == 'Facebook'}" styleClass="avatar" layout="block">
					<img src="{!persona.ExternalPictureURL}" onError="this.src = '{!URLFOR($Resource.SCS_SocialLookUp, 'imgs/MissingAvatar.png')}'" />
					<div class="socialLabelFacebook"></div>
				</apex:outputPanel>

				<apex:outputPanel rendered="{!persona.Provider == 'Facebook'}" styleClass="personaInfo" layout="block">
					<h3>{!persona.RealName}</h3>
					<a href="{!persona.ProfileUrl}" class="twitterHandle" target="_blank" >{!persona.RealName} on Facebook</a>
					<ul>
						<li>
							<apex:outputPanel rendered="{!!ISBLANK(persona.NumberOfFriends)}">
								<apex:outputField value="{!persona.NumberOfFriends}" rendered="{!$ObjectType.SocialPersona.fields.NumberOfFriends.Accessible}" /> Friends
							</apex:outputPanel>
						</li>
						<li>&nbsp;</li>
						<li>&nbsp;</li>
					</ul>
				</apex:outputPanel>

				<apex:outputPanel rendered="{!socialAccount!=Null}" styleClass="avatar" layout="block">
					<img src="{!socialAccount.ExternalPictureURL}" onError="this.src = '{!URLFOR($Resource.SCS_SocialLookUp, 'imgs/MissingAvatar.png')}'" />
				</apex:outputPanel>

				<apex:outputPanel rendered="{!socialAccount!=Null}" styleClass="personaInfo" layout="block" >
					<h3>{!socialAccount.Username}</h3>
					<span class="twitterHandle">Managed Social Account</span>

					<ul>
						<li>&nbsp;</li>
						<li>&nbsp;</li>
						<li>&nbsp;</li>
					</ul>
				</apex:outputPanel>

			</div>

			<nav id="componentSwitch">
				<ul>
					<li id="personaHistorySwitch" class="tab-status active" title="Persona History" role="presentation" aria-selected="true" aria-controls="tab-history">
						Persona History
					</li>

					<li id="conversationSwitch" class="tab-status " title="Conversations" role="presentation" aria-selected="true" aria-controls="tab-public">
						Conversations
					</li>


					<li id="tab-status_privateConversation" class="tab-status " title="Private Conversations" role="presentation" aria-selected="true" aria-controls="tab-private">
						Private
					</li>
					<span></span>
				</ul>
			</nav>

			<ul id="historyList" class="conversations"></ul>
			<ul id="conversationList"  class="conversations"></ul>
			<ul id="privateList"  class="conversations"></ul>

			<div id="loadMoreBtn" onclick="loadMore()" value="More posts"  class="loadMoreBtn">
				load more
			</div>
		</div>

	</div>

	<script id="tplHistory" type="text/x-jsrender">
		<li class="postWrapper">
			<span>
				{{if IsOutbound }}
				<img src="{{:OutboundSocialAccount.ExternalPictureURL}}"
						onError="this.src = '{!URLFOR($Resource.SCS_SocialLookUp, 'imgs/MissingAvatar.png')}'" />
				 {{else}}
				 <img src="{{:Persona.ExternalPictureURL}}"
						onError="this.src = '{!URLFOR($Resource.SCS_SocialLookUp, 'imgs/MissingAvatar.png')}'" />
				 {{/if}}
			</span>


				{{if ( MessageType =='Post' || MessageType =='Tweet')}}
					<div class="postContent" data-Root="root:{{:Id}}" >
				{{else}}
					<div class="postContent" data-Root="{{:{!$ObjectType.SocialPost.fields.Thread_Root_Post__c.Name}}}" >
				{{/if}}

				<p class="post">{{:Content}}</p>
				<div class="postInfo">
					{{if Provider == 'Facebook'}}
						<img src="{!URLFOR($Resource.SCS_SocialLookUp, 'imgs/facebook-icon.png')}">
					{{else}}
					  <img src="{!URLFOR($Resource.SCS_SocialLookUp, 'imgs/twitter-icon.png')}">
					{{/if}}

					<span>{{:MessageType}}</span>
					<span class="bullet">•</span>
					<span >{{:~formatDate(Posted)}}</span>
					<span class="bullet">•</span>
					{{if Parent != undefined}}
						<img src="{!URLFOR($Resource.SCS_SocialLookUp, 'imgs/case-icon.png')}" alt="case" styleClass="iconMargin" >
						&nbsp;{{:Parent.Name}}
					{{/if}}
				</div>



			</div>
		</li>
	</script>

	<script id="tplConversation" type="text/x-jsrender">

		<li id="{{:Id}}" class="postWrapper postWrapper_{{:MessageType}}_{{:Provider}}">

		  <span >
		   {{if IsOutbound  }}
			   {{if OutboundSocialAccount != undefined  }}
					<img src="{{:OutboundSocialAccount.ExternalPictureURL}}"
						onError="this.src = '{!URLFOR($Resource.SCS_SocialLookUp, 'imgs/MissingAvatar.png')}'" />
				 {{else}}
					<img src="{!URLFOR($Resource.SCS_SocialLookUp, 'imgs/MissingAvatar.png')}" />
				 {{/if}}

			 {{else}}
			   {{if Persona != undefined  }}
				   <img src="{{:Persona.ExternalPictureURL}}"
					onError="this.src = '{!URLFOR($Resource.SCS_SocialLookUp, 'imgs/MissingAvatar.png')}'" />
				 {{else}}
					<img src="{!URLFOR($Resource.SCS_SocialLookUp, 'imgs/MissingAvatar.png')}" />
				 {{/if}}
			 {{/if}}
		  </span>

		  {{if ( MessageType =='Post' || MessageType =='Tweet')}}
		  	<div class="postContent" data-Root="root:{{:Id}}" >
		  {{else}}
		  	<div class="postContent" data-Root="{{:{!$ObjectType.SocialPost.fields.Thread_Root_Post__c.Name}}}" >
		  {{/if}}


				<p class="post">{{:Content}}</p>
				<div class="postInfo">
				{{if Provider == 'Facebook'}}
					<img src="{!URLFOR($Resource.SCS_SocialLookUp, 'imgs/facebook-icon.png')}">
				{{else}}
				  <img src="{!URLFOR($Resource.SCS_SocialLookUp, 'imgs/twitter-icon.png')}">
				{{/if}}

					<span>{{:MessageType}}</span>
					<span class="bullet">•</span>
					<span id="date">{{:~formatDate(Posted)}}</span>
					<span class="bullet">•</span>
					{{if Parent != undefined}}
						<img src="{!URLFOR($Resource.SCS_SocialLookUp, 'imgs/case-icon.png')}" alt="case" styleClass="iconMargin" >
						&nbsp;{{:Parent.Name}}
					{{/if}}
					 {{if (hasReplies) }}
					  <span class="bullet">&bull;</span>
					  <span id="plus_{{:Id}}" class="plusIcon" onclick="loadThreadsFor('{{:Id}}','{{:MessageType}}')">[+]</span>
					  <span id="less_{{:Id}}"  class="plusIcon hide" onclick="removeThreadsFor('{{:Id}}')">[-]</span>
					{{/if}}
				</div>

			</div>
		</li>
	</script>

	<apex:includeScript value="{!URLFOR($Resource.scss__SCS_SocialLookUp, 'javascript/jquery-1.11.3.min.js')}"/>
	<apex:includeScript value="{!URLFOR($Resource.scss__SCS_SocialLookUp, 'javascript/jsrender.js')}"/>
	<apex:includeScript value="{!URLFOR($Resource.scss__SCS_SocialLookUp, 'javascript/moment.js')}"/>
	<apex:includeScript value="{!URLFOR($Resource.scss__SCS_SocialLookUp, 'javascript/moment-timezone.js')}"/>
	<script type="text/javascript">
		var pageSize = {!pageSize};
		var pageNum = 0;
		var tplHistory = $.templates("#tplHistory");
		var tplConversation = $.templates("#tplConversation");
		var disableTabClick = false;

		function changeTab(elem){

			disableTabClick = true;
			tabId = $(elem).attr('aria-controls');
			$('.tab-status').removeClass('active');
			$(elem).addClass('active');
			newId = $(elem).attr("aria-controls");
			console.log('changeTab '+tabId);
			pageNum = 0;

			//remove items
			$('.conversations li').remove();

			displayTab(newId);
		}

		function loadMore(){
			var selTab = $('.tab-status.active').attr('aria-controls');
			if ( isNaN(pageNum))
				pageNum = -1;
			pageNum++;

			console.log('loadMore '+selTab);
			displayTab(selTab);
		}

		function displayTab(tabId){
			//hide and remove items

			console.log('displayTab '+tabId +' on page '+pageNum);

			switch (tabId) {
				case 'tab-public':getRemoteConversationsPosts();
						$('#conversationControls').show();
					break;
				case 'tab-history':getRemotePosts();
					$('#historyList').show();
					break;

				case 'tab-private': getRemotePrivateConversationsPosts();
						$('#privateConversationControls').show();
					break;
				default:
			}
		}

		function hasMore(rSize){
			console.log('hasMore :'+rSize+' pageSize : '+pageSize+' pageNum : '+pageNum);
			if (rSize < pageSize){
				//hideLoadMore
				$('#loadMoreBtn').hide();
			}else{
				$('#loadMoreBtn').show()
			}
		}

		function getRemotePosts() {
			var objId = '{!$CurrentPage.parameters.id}';

			window.historyPosts = [];
			Visualforce.remoting.Manager.invokeAction(
				'{!$RemoteAction.SocialLookupCtr.getPostHistory}',
				objId,pageNum,
				function(result, event){
					if (event.status) {
						$(result).each(function (i,e){
							var htmlOutput = tplConversation.render(e,{
								formatDate: function(mili) {
									return formatDate(mili);
								}
							});
							$("ul#historyList").append(htmlOutput);
						});
						hasMore(result.length);
					} else if (event.type === 'exception') {
						document.getElementById("responseErrors").innerHTML =
							event.message + "<br/>\n<pre>" + event.where + "</pre>";
					} else {
						document.getElementById("responseErrors").innerHTML = event.message;
					}

					disableTabClick = false;
				},
				{escape: true}
			);
		}

		function getRemoteConversationsPosts() {
			var objId = '{!$CurrentPage.parameters.id}';
			window.conversationPosts = [];

			Visualforce.remoting.Manager.invokeAction(
				'{!$RemoteAction.SocialLookupCtr.getConversationsPosts}',
				objId,pageNum,
				function(result, event){
					if (event.status && result!= null) {
						$(result).each(function (i,e){
							var htmlOutput = tplConversation.render(e,{
								formatDate: function(mili) {
									return formatDate(mili);
								}
							});

							$("ul#conversationList").append(htmlOutput);
						});
						hasMore(result.length);
					} else if (event.type === 'exception') {
						document.getElementById("responseErrors").innerHTML =
							event.message + "<br/>\n<pre>" + event.where + "</pre>";
					} else {
						document.getElementById("responseErrors").innerHTML = event.message;
					}

					disableTabClick = false;
				},
				{escape: true}
			);
		}

		function getRemotePrivateConversationsPosts(){
			var objId = '{!$CurrentPage.parameters.id}';
			window.privatePosts = [];

			Visualforce.remoting.Manager.invokeAction(
				'{!$RemoteAction.SocialLookupCtr.getPrivatePosts}',
				objId,pageNum,
				function(result, event){
					if (event.status && result != null) {

						$(result).each(function (i,e){
							var htmlOutput = tplConversation.render(e,{
								formatDate: function(mili) {
									return formatDate(mili);
								}
							});

							$("ul#privateList").append(htmlOutput);
						});
						hasMore(result.length);
					} else if (event.type === 'exception') {
						document.getElementById("responseErrors").innerHTML =
							event.message + "<br/>\n<pre>" + event.where + "</pre>";
					} else {
						document.getElementById("responseErrors").innerHTML = event.message;
					}

					disableTabClick = false;
				},
				{escape: true}
			);

		}

		function loadThreadsFor(parentId,messageType){
			console.log('MessageType:'+messageType);

			$('span#plus_'+parentId).hide();
			$('span#less_'+parentId).hide();
			Visualforce.remoting.Manager.invokeAction(
				'{!$RemoteAction.SocialLookupCtr.getThreadByPostId}',
				parentId,
				function(result, event){
					if (event.status) {
						loadThread(parentId,result);

					} else if (event.type === 'exception') {
						document.getElementById("responseErrors").innerHTML =
							event.message + "<br/>\n<pre>" + event.where + "</pre>";
					} else {
						document.getElementById("responseErrors").innerHTML = event.message;
					}
				},
				{escape: true}
			);
		}

		function removeThreadsFor(parentId){
			$('span#plus_'+parentId).show();
			$('span#less_'+parentId).hide();
			$( '#'+parentId+' ul').remove();
		}

		function loadThread(parentId, result){
			$('li.postThread').remove();
			$('span#less_'+parentId).show();
			console.log('will load threads for '+parentId );
			$( '#'+parentId).append('<ul class="'+parentId+'_childs"></ul>');
			$(result).each(function (i,e){
				var htmlOutput = tplConversation.render(e,{
					formatDate: function(mili) {
						return formatDate(mili);
					}
				});
				if (parentId != e.Id){

					$( '.'+parentId+'_childs').append($( htmlOutput).addClass('postThread_'+parentId));
				}
			});
		}

		function formatDate (mili){
			//6/8/2015 8:22 AM
			//.format('YYYY-MM-DD h:mm A')
			return moment(mili).utcOffset('{!JSENCODE(offset)}').format('MM/DD/YYYY h:mm A')
		}

		$(document).ready(function() {

			$('li.tab-status').click(function(e){
				if (! disableTabClick)
					changeTab(e.target);
			});

			$('.caseInfo a').each(function(i,e){
				$(e).parent().html($(e).text());
			});
			changeTab($('#componentSwitch li:first'));
		});
	</script>

</apex:page>